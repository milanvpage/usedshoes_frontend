@import url("https://fonts.googleapis.com/css2?family=Raleway:wght@500;600&display=swap");

body {
    background-color: rgb(196, 255, 242);
    font-family: "Raleway", sans-serif;
};

img {
    width: 100%;
    border-radius: 12px;
    height: 15vw/*214px*/;
    object-fit: cover;
};
/* Next, we need to style the div element that has the id attribute of container. This will be the element that decides the width of the card and places it in the middle of the view. */
#shoes-cont {
    max-width: 300px;
    /* Center the container in middle on horizontal axis */
    margin: 0 auto;

    /* add empty space above the container (20% of the view height) */
    margin-top: 20vh;

    /* You can see that we use margin: 0 auto; to center the div element that has a max-width of 300px. */
}

/* To style the card, we need to select the div element that has the class of card. We also want to give it a white background color, a border, and some space between the content and the border: */
.shoe-card {
    text-align: center;
    /* change background color */
    background-color: white;

    /* add border */
    border: 1px solid #bacdd8;

    /* add space between the border and the content */
    padding: 8px;

    border-radius: 12px;

    display: inline-grid;

    box-shadow: 3px 4px rgb(167, 204, 167);
}

/* style the rest of the elements */

/* Style div elements that have class equal to name */
.name {
    font-size: 24px;
    font-weight: 600;

    margin-top: 16px;
}

/* Style p element */
p {
    font-size: 14px;
    color: #7f8c9b;
    line-height: 150%;
}

/* Style button element */
button {
    border: none;
    padding: 12px 24px;
    border-radius: 50px;

    font-weight: 600;
    color: #0077ff;
    background-color: #e0efff;

    /* Button is inline-block element by default, it need to have block display for margin: 0 ato; to work */
    margin: 0 auto;
    display: block;

    /* Button is a clickable element, therefore it should have a pointer cursor */
    cursor: pointer;
}

.card__details {
    /* Add space around the details */
    padding: 16px 8px 8px 8px;
}

/* When the button is focused or hovered, it's good have some indication for usability. You can do so by switching the text and background colors of the button: */

/* Add style when the button is focused or hovered */
button:focus,
button:hover {
    background-color: #0077ff;
    color: #e0efff;
}

/* IN CSS - every element is a box. Each box has the following properties: */
/* Padding: Space outside the content */
/* Border: Lines outside the padding */
/* Margin: Space outside the border */
